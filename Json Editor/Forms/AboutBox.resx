<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>